{"ast":null,"code":"var _jsxFileName = \"/home/luffex/Desktop/reactfin/src/components/Test.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\n\nfunction Test() {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const ref = db.collection('product');\n\n  function getProducts() {\n    setLoading(true);\n    ref.onSnapshot(querySnapshot => {\n      const items = [];\n      querySnapshot.forEach(doc => {\n        items.push(doc.data());\n      });\n      setProducts(items);\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Products\"), products.map(product => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, product.category), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, product.price))));\n}\n\nexport default Test;","map":{"version":3,"sources":["/home/luffex/Desktop/reactfin/src/components/Test.js"],"names":["React","useState","useEffect","db","Test","products","setProducts","loading","setLoading","ref","collection","getProducts","onSnapshot","querySnapshot","items","forEach","doc","push","data","map","product","name","category","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,EAAR,QAAiB,aAAjB;;AAGA,SAASC,IAAT,GAAiB;AACb,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACM,OAAD,EAAWC,UAAX,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;AAEA,QAAMQ,GAAG,GAAGN,EAAE,CAACO,UAAH,CAAc,SAAd,CAAZ;;AAEA,WAASC,WAAT,GAAuB;AACnBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,GAAG,CAACG,UAAJ,CAAgBC,aAAD,IAAmB;AAC9B,YAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBC,GAAD,IAAS;AAC3BF,QAAAA,KAAK,CAACG,IAAN,CAAWD,GAAG,CAACE,IAAJ,EAAX;AACH,OAFD;AAGAZ,MAAAA,WAAW,CAACQ,KAAD,CAAX;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPD;AAQH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEL,EAFK,CAAT;;AAKA,MAAIJ,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKF,QAAQ,CAACc,GAAT,CAAcC,OAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAO,CAACC,IAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,OAAO,CAACE,QAAZ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAACG,KAAZ,CAHJ,CADH,CAFL,CADJ;AAaH;;AAED,eAAenB,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {db} from \"../firebase\";\n\n\nfunction Test () {\n    const [products , setProducts] = useState([])\n    const [loading , setLoading] = useState(false)\n\n    const ref = db.collection('product');\n\n    function getProducts() {\n        setLoading(true)\n        ref.onSnapshot((querySnapshot) => {\n            const items = []\n            querySnapshot.forEach((doc) => {\n                items.push(doc.data())\n            })\n            setProducts(items)\n            setLoading(false)\n        })\n    }\n\n    useEffect(() => {\n        getProducts()\n    } , [] )\n\n\n    if (loading) {\n        return <h1>Loading...</h1>\n    }\n\n    return (\n        <div>\n            <h1>Products</h1>\n            {products.map((product) => (\n                <div>\n                    <h2>{product.name}</h2>\n                    <p>{product.category}</p>\n                    <p>{product.price}</p>\n                </div>\n            ))}\n        </div>\n    )\n\n}\n\nexport default Test"]},"metadata":{},"sourceType":"module"}